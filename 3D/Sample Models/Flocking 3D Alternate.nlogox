<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/netlogox/1">
  <version><![CDATA[NetLogo 3D 6.1.0-M1]]></version>
  <previewCommands>
    <compiled><![CDATA[setup
watch turtle 0
repeat 500 [ go ]]]></compiled>
  </previewCommands>
  <info><![CDATA[## WHAT IS IT?

This is a vector-based 3D flocking model, based on Jon Klein's implementation of Craig Reynolds' Boids algorithm. Each bird is influenced by a series of urges. By assigning different weights to each urge, the birds exhibit different flocking behaviors.

## HOW IT WORKS

Each bird has vectors for velocity and acceleration, that is, a velocity and acceleration in the x, y, and z directions.  Each of these vectors is influenced by six urges, to be near the center of the flock, to have the same velocity as the rest of the flock, to be keep spacing correct, to avoid colliding with obstacles, to be near to the center of the world and to wander throughout the world.  Each of these factors affects the resulting velocity and acceleration; however, the sliders in the interface weight the amount that each has an effect.

## HOW TO USE IT

Choose the number of birds with the POPULATION slider. Press SETUP to create the birds. Press GO to start the simulation.

BUILD-CUBES randomly places floating-ball obstacles throughout the world. BUILD-WALL creates a randomly placed wall.

VISION is the distance that a bird can see around it. MAX-VELOCITY is the fastest a bird can go and MAX-ACCELERATION is the fastest a bird can accelerate. CRUISE-DISTANCE is the minimum distance from a nearby bird for a bird to feel comfortable.

A bird's movement is determined by the set of urges acting on that bird:

CENTER-CONSTANT - urge to move towards the center of its flock
VELOCITY-CONSTANT - urge to align its velocity with the velocity of her flockmates
SPACING-CONSTANT - urge to be no closer than CRUISE-DISTANCE from other birds
AVOIDANCE-CONSTANT - urge to avoid colliding with obstacles
WORLD-CENTER-CONSTANT - urge to avoid the edges of the world
WANDER-CONSTANT - urge to move in a random way

The urge-constant sliders control the weight of each urge in determining the birds' behavior.

If the VERTICAL-SPACING? switch is off the spacing urge only operates horizontally.

If a bird hits an obstacle, the bird dies. The COUNT DEAD-BIRDS monitor shows the number of dead birds.

## THINGS TO NOTICE

Compare how long it takes the birds to form flocks in this model to how long it takes in the regular 3D Flocking model.

Given the default settings the flocks travel in a circular pattern.

## THINGS TO TRY

Turn VERTICAL-SPACING? off and notice how it changes the shape of the flocks.

Try changing the different constants so that the birds become better or worse at avoiding obstacles.

## EXTENDING THE MODEL

Try adding different urges to the model; also try making different types of obstacles for birds to avoid.

Create different breeds of birds that behave differently from each other and see how they interact.

## NETLOGO FEATURES

This model uses lists and `map` fairly extensively to represent and manipulate vectors.

## CREDITS AND REFERENCES

This model is based on Jon Klein's "Swarm" demo for breve, (see http://www.spiderland.org/s/) which was inspired by Craig Reynolds classic Boids flocking algorithm.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (2005).  NetLogo Flocking 3D Alternate model.  http://ccl.northwestern.edu/netlogo/models/Flocking3DAlternate.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2005 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

<!-- 2005 -->]]></info>
  <systemDynamics/>
  <modelInfo>
    <title/>
    <subject/>
  </modelInfo>
  <linkShapes>
    <linkShape curviness="0.0" name="default">
      <line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/>
      <line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/>
      <line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/>
      <indicator editableColorIndex="0" rotatable="true" name="link direction">
        <elements>
          <line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/>
          <line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/>
        </elements>
      </indicator>
    </linkShape>
  </linkShapes>
  <widgets>
    <view bottom="281" right="260" top="0" left="0" frameRate="30.0" showTickCounter="true" fontSize="10">
      <dimensions3d maxPzcor="12" minPzcor="-12" maxPycor="12" minPycor="-12" maxPxcor="12" minPxcor="-12" wrapInZ="true" wrapInY="true" wrapInX="true" patchSize="10.0"/>
      <tickCounterLabel><![CDATA[ticks]]></tickCounterLabel>
    </view>
    <button bottom="100" right="194" top="67" left="107" ticksEnabled="false" forever="false">
      <source><![CDATA[setup]]></source>
    </button>
    <button bottom="100" right="288" top="67" left="197" ticksEnabled="true" forever="true">
      <source><![CDATA[go]]></source>
      <display><![CDATA[go]]></display>
    </button>
    <slider bottom="65" right="309" top="32" left="94" direction="horizontal" default="60.0">
      <maximum><![CDATA[200]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[population]]></variable>
    </slider>
    <slider bottom="266" right="283" top="233" left="111" direction="horizontal" default="1.5">
      <maximum><![CDATA[10]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[0.1]]></step>
      <variable><![CDATA[vision]]></variable>
    </slider>
    <slider bottom="438" right="358" top="405" left="186" direction="horizontal" default="4.0">
      <maximum><![CDATA[20]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[wander-constant]]></variable>
    </slider>
    <slider bottom="403" right="358" top="370" left="186" direction="horizontal" default="10.0">
      <maximum><![CDATA[20]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[world-center-constant]]></variable>
    </slider>
    <slider bottom="403" right="185" top="370" left="13" direction="horizontal" default="8.0">
      <maximum><![CDATA[20]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[center-constant]]></variable>
    </slider>
    <slider bottom="438" right="185" top="405" left="13" direction="horizontal" default="6.0">
      <maximum><![CDATA[20]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[velocity-constant]]></variable>
    </slider>
    <slider bottom="335" right="362" top="302" left="190" direction="horizontal" default="14.0">
      <maximum><![CDATA[20]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[spacing-constant]]></variable>
    </slider>
    <slider bottom="301" right="189" top="268" left="17" direction="horizontal" default="4.0">
      <maximum><![CDATA[20]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[max-velocity]]></variable>
    </slider>
    <slider bottom="301" right="362" top="268" left="190" direction="horizontal" default="1.0">
      <maximum><![CDATA[20]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[max-acceleration]]></variable>
    </slider>
    <slider bottom="335" right="189" top="302" left="17" direction="horizontal" default="1.0">
      <maximum><![CDATA[5]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[0.1]]></step>
      <variable><![CDATA[cruise-distance]]></variable>
    </slider>
    <button bottom="226" right="250" top="193" left="133" ticksEnabled="true" forever="false">
      <source><![CDATA[follow turtle 0]]></source>
    </button>
    <switch bottom="369" right="277" top="336" left="105" isOn="true">
      <variable><![CDATA[vertical-spacing?]]></variable>
    </switch>
    <slider bottom="472" right="275" top="439" left="103" direction="horizontal" default="50.0">
      <maximum><![CDATA[100]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <variable><![CDATA[avoidance-constant]]></variable>
    </slider>
    <monitor fontSize="11" bottom="185" right="253" top="140" left="132" precision="3">
      <source><![CDATA[count dead-birds]]></source>
    </monitor>
    <button bottom="135" right="194" top="102" left="96" ticksEnabled="false" forever="false">
      <source><![CDATA[build-cubes]]></source>
    </button>
    <button bottom="135" right="295" top="102" left="197" ticksEnabled="false" forever="false">
      <source><![CDATA[build-wall]]></source>
    </button>
  </widgets>
  <experiments/>
  <shapes>
    <vectorShape editableColorIndex="0" rotatable="true" name="default">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="airplane">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="arrow">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="box">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/>
        <line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/>
        <line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/>
        <line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="bug">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="butterfly">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/>
        <polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/>
        <circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/>
        <line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/>
        <line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="car">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/>
        <circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/>
        <circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/>
        <polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="circle">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="circle 2">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/>
        <circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="cow">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="cylinder">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="dot">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="face happy">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/>
        <polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="face neutral">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/>
        <rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="face sad">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/>
        <polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="fish">
      <elements>
        <polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/>
        <polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/>
        <polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/>
        <circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="flag">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="flower">
      <elements>
        <polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/>
        <circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/>
        <polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/>
        <polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="house">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/>
        <rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/>
        <line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="leaf">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="line">
      <elements>
        <line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="line half">
      <elements>
        <line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="link">
      <elements>
        <line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="link direction">
      <elements>
        <line marked="true" filled="false" color="#8D8D8D" y2="225" x2="30" y1="150" x1="150"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="225" x2="270" y1="150" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="pentagon">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="person">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/>
        <rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="plant">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="square">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="square 2">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/>
        <rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="star">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="target">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/>
        <circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/>
        <circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="tree">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/>
        <rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="triangle">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="triangle 2">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/>
        <polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="truck">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/>
        <rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/>
        <polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/>
        <circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/>
        <rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/>
        <circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/>
        <circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/>
        <circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/>
        <circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/>
        <circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="turtle">
      <elements>
        <polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/>
        <polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/>
        <polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/>
        <polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/>
        <polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="wheel">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/>
        <circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="x">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/>
      </elements>
    </vectorShape>
  </shapes>
  <code><![CDATA[breed [ birds bird ]
breed [ dead-birds dead-bird ]


birds-own [
  flockmates         ;; agentset of nearby turtles
  nearest-neighbor   ;; closest one of our flockmates
  velocity           ;; vector with x y and z components it is determined by the previous velocity
                     ;; and the current acceleration at each step
  acceleration       ;; vector with x y and z components, determined by the six urges
]

;;
;; Setup Procedures
;;
to setup
  clear-all
  setxyz 0 -30 0
  create-birds population
    [
      place-bird
      set size 0.75
      set velocity [ 0 0 0 ]
      set acceleration [ 0 0 0 ]
      set color yellow + 2 - random-float 6
      set flockmates no-turtles
    ]
  ask turtle 0 [ set color red ]

  ;; checkered floor
  ask patches
    with [ pzcor = min-pzcor ]
      [ set pcolor 3 + green + ( pxcor + pycor ) mod 2 ]

  reset-ticks
end

to place-bird ;; turtle procedure
  setxyz random-xcor random-ycor random-zcor
  ;; make sure that the birds are not on the floor or inside the
  ;; any obstacles that have been created.
  while [ pcolor != black ]
  [ setxyz random-xcor random-ycor random-zcor ]
end

;;
;; Runtime Procedures
;;
to go
  ask birds
  [ flock
    ;; if we've hit something
    ;; we're a goner
    if pcolor != black
    [ hatch-dead-birds 1
      [ bk 1 ]
      die ]
  ]
  ;; ask the dead ones to continue falling
  ask dead-birds
    [ fall ]
  tick
end

to flock  ;; bird procedure
  ;; look for birds in my vicinity
  find-flockmates

  ;; acceleration at each step is determined
  ;; entirely by the urges
  set acceleration (list 0 0 0)

  add-urge world-center-urge world-center-constant
  add-urge wander-urge wander-constant
  add-urge avoid-obstacle-urge avoidance-constant

  ;; if I'm not in a flock ignore the flock related
  ;; urges
  if count flockmates > 0
  [ add-urge spacing-urge spacing-constant
    add-urge center-urge center-constant
    add-urge velocity-urge velocity-constant ]

  ;; keep the acceleration within the accepted range
  if magnitude acceleration > max-acceleration
  [ set acceleration
    (scale
        max-acceleration
        normalize acceleration) ]

  ;; the new velocity of the bird is sum of the acceleration
  ;; and the old velocity.
  set velocity (add velocity acceleration)

  ;; keep the velocity within the accepted range
  if magnitude velocity > max-velocity
  [ set velocity
    (scale
        max-velocity
        normalize velocity) ]

  let nxcor xcor + ( item 0 velocity )
  let nycor ycor + ( item 1 velocity )
  let nzcor zcor + ( item 2 velocity )
  facexyz nxcor nycor nzcor
  fd 0.1 * magnitude velocity
end

to add-urge [urge factor] ;; bird procedure
  set acceleration add acceleration scale factor normalize urge
end

to-report world-center-urge  ;; bird reporter
  ifelse distancexyz 0 0 0 > 10
  [ report (list (- xcor) (- ycor) (- zcor) ) ]
  [ report (list 0 0 0) ]
end

to-report center-urge ;; bird reporter
  ;; report the average distance from my flockmates
  ;; in each direction
  if count flockmates = 0 or center-constant = 0
  [ report (list 0 0 0) ]
  report
    (map
      [ [a b] -> b - a ]
      (list xcor ycor zcor)
      (list
        mean [ xcor ] of flockmates
        mean [ ycor ] of flockmates
        mean [ zcor ] of flockmates ) )
end

to-report velocity-urge ;; bird reporter
  ;; report the average difference in velocity
  ;; from my flock mates
  if count flockmates = 0 or velocity-constant = 0
  [ report (list 0 0 0) ]
  report
    ( map
      [ [a b] -> a - b ]
      (list
        mean [ item 0 velocity ] of flockmates
        mean [ item 1 velocity ] of flockmates
        mean [ item 2 velocity ] of flockmates )
      velocity )

end

to-report wander-urge ;; turtle reporter
  ;; report 3 random numbers between -1 and 1
  report n-values 3 [ (random-float 2) - 1 ]
end

to-report spacing-urge ;; turtle reporter
  let urge [ 0 0 0 ]
  ;; report the sum of the distances to birds
  ;; in my flock that are closer to me than
  ;; cruise-distance
  ask flockmates with [ distance myself < cruise-distance ] [
    set urge
      add
        urge
        (subtract
          (list [xcor] of myself [ycor] of myself [zcor] of myself)
          (list xcor ycor zcor))
  ]
  ;; when vertical spacing is not on ignore the
  ;; z component of the spacing urge.
  if not vertical-spacing? [ set urge lput 0 but-last urge ]
  report urge
end

to-report avoid-obstacle-urge ;; turtle reporter
  let urge (list 0 0 0)
  if avoidance-constant = 0 [ report urge ]
  ;; report the sum of the distances from
  ;; any patches that are obstacles
  ;; in each direction
  ask patches in-radius vision with [ pcolor != black ]
  [ set urge
      add
        urge
        subtract
          (list [xcor] of myself [ycor] of myself [zcor] of myself)
          (list pxcor pycor pzcor)
  ]
  report urge
end

to find-flockmates  ;; turtle reporter
  ;; latch on to the nearby birds
  set flockmates other birds in-radius vision
end

to fall ;; dead-bird procedure
  if zcor > min-pzcor + 1
    [ set zcor zcor - 0.5 ]
end

;;
;; world building
;;
to build-cubes
  ask n-of 20 patches
  [ set pcolor blue + random 3
    ask neighbors [ set pcolor blue + random 3 ] ]
end

to build-wall
  let x max-pxcor - random world-width
  let ydir 1 - random 2
  if ydir = 0 [ set ydir -1 ]
  let height random max-pxcor
  ask patches
    with [ pxcor = x and ydir * pycor < 0 and pzcor < height ]
    [ set pcolor gray + random 2 ]
end

;;
;; vector operations
;;
to-report add [ v1 v2 ]
  report (map [ [a b] -> a + b ] v1 v2)
end

to-report subtract [ v1 v2 ]
  report (map [ [a b] -> a - b ] v1 v2)
end

to-report scale [ scalar vector ]
  report map [ n -> scalar * n ] vector
end

to-report magnitude [ vector ]
  report sqrt sum map [ n -> n * n ] vector
end

to-report normalize [ vector ]
  let m magnitude vector
  if m = 0 [ report vector ]
  report map [ n -> n / m ] vector
end


; Copyright 2005 Uri Wilensky.
; See Info tab for full copyright and license.]]></code>
  <modelSettings/>
  <hubnet/>
</model>
