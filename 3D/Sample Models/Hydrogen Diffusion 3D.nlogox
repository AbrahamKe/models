<?xml version='1.0' encoding='UTF-8'?>
<model xmlns="http://ccl.northwestern.edu/netlogo/netlogox/1">
  <version><![CDATA[NetLogo 3D 6.1.0-M1]]></version>
  <previewCommands>
    <compiled><![CDATA[setup repeat 75 [ go ]]]></compiled>
  </previewCommands>
  <info><![CDATA[## WHAT IS IT?

This model simulates hydrogen diffusion through a lattice, in particular, hydrogen desorption from solid state hydrides. These hydrides are hydrogen storage materials that absorb hydrogen at high pressures, and release hydrogen at high temperatures.

This research tool allows us to better understand the kinetics of hydrogen desorption from a lattice, which can aid in the development of candidate hydrogen storage materials for hydrogen fuel cell powered vehicles. These vehicles have the potential to be extremely efficient, zero-emission vehicles and may serve to be a central component in the battle against global warming.

Diffusion and desorption are complex material behaviors, and these kinetics are not well understood. There are several fundamental parameters involved in these processes:

####Bond breaking
Hydrogen atoms are stored on molecular units like BH<sub>4</sub> and AlH<sub>4</sub>, where they are bonded to some central atom like boron or aluminum. In order for hydrogen to diffuse, it must break the bond formed with this central atom. An important factor affecting this process is the strength of the bond, controlled in the model by the hydrogen desorption probabilities sliders.

####Diffusion through different phases
As hydrogen desorbs, the underlying crystal structure of the material will change. This in turn affects the movement speed of hydrogen atoms through the material. It is important to model the relative probability of a hydrogen atom moving into a cell depleted of hydrogen, versus a completely full cell.

####Reabsorption
There is a probability that if a hydrogen atom travels to a non-full cell, it will form bonds with the central atom in that cell. This reabsorption property is probabilistic and can dramatically affect the desorption rate from the materials.

This model explores the contribution of each of these properties on the desorption and diffusion behavior of candidate hydrogen storage materials. Different materials can be modeled through setting the absorption and desorption probabilities to match the behavior of the material under investigation.

## HOW IT WORKS

The model begins with a fully saturated lattice with all available hydrogen in compound form.  Hydrogen will diffuse freely through the lattice until they reach the surface of the material, where they must pair off in order to leave the lattice as a H<sub>2</sub> gas molecule. The simulation terminates when the available hydrogen in the model reaches the user-set termination percent.

The SETUP button initializes the model with a fully saturated lattice of hydrogen atoms.

The GO button begins the diffusion process.
The lattice is represented by a series of small cubes marking the center of each lattice molecule. At each tick, hydrogen atoms have the opportunity to break their bonds to the lattice molecule. This behavior is controlled by the HYDROGEN DESORPTION PROBABILITIES sliders which define the probability of a hydrogen atom desorbing based on the number of hydrogen atoms currently bonded with the central atom.  Free hydrogen within the lattice will move to one of its six neighboring patches with equal probability, unless one of them is a depleted (red) patch, where the probability is altered by a factor of RED-DIFFUSE. The hydrogen will continue to desorb/absorb over the course of the model run until it pairs up and leaves the system.

When a free hydrogen atom reach the surface of the lattice, it will still move once per tick, but can only move to other patches on the surface of the material. When it pairs up with another hydrogen, it flashes yellow then is removed from the model.

The color of the cube indicates the amount of available desorbable hydrogen.
White:&nbsp;&nbsp;XH<sub>4</sub>: fully saturated with 3 potential available hydrogen atoms
Blue:&nbsp;&nbsp;&nbsp;&nbsp;XH<sub>3</sub>: 2 potential hydrogen to be desorbed
Green:&nbsp;&nbsp;XH<sub>2</sub>: 1 potential hydrogen to be desorbed
Red:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;XH&nbsp;&nbsp;: fully depleted with no available hydrogen to lose

*This is modeled after LiBH<sub>4</sub>, which follows the reaction LiBH<sub>4</sub> -> LiH+B+3/2H<sub>2</sub>. LiH is a stable compound and does not desorb more hydrogen.

When an atom has desorbed all available hydrogen, it becomes red and "stable". At this stage, it undergoes a "phase change". It is unknown if hydrogen will diffuse through these phases at different speeds, but it is very likely to have a different diffusing speed. Because the XH compound has less hydrogen, it ought to be less dense, and we anticipate the diffusion rate to be slower. In the model, this rate can be controlled by the RED-DIFFUSE slider.

The desorbed hydrogen follow a similar color scheme:
Blue - first free hydrogen
Green - second free hydrogen
Red - third free hydrogen

## HOW TO USE IT

The probability for desorption, diffusion, and absorption of free hydrogen can be changed using corresponding sliders. By varying the desorption sliders, one can control the probability for hydrogen atoms to free themselves from the compound at each of the three stages (4->3, 3->2, 2-1). Similarly, the absorption sliders control the probability for hydrogen atoms to be re-absorbed back into molecular form (causing the lattice cube to change color accordingly).

### Visualization Options

The GRID-DRAW switch enables the user to turn on or off the grid markings for each patch.  By default this is set to off and is generally not recommended for world sizes of larger than 5x5x5.

The four H-On switches enable the user to change the color of the desired hydrogen to dark gray.  This allows the user to focus their attention on one particular stage of diffusion.  For example, turning off the H4,H3,H2 switches will color everything dark gray except for the red depleted lattice patches as well as the final desorbed hydrogen.

### Monitors

Fraction of Surface H Remaining:
Displays the fraction of desorbable hydrogen (vs. initial) remaining in the surface layer of the lattice.

Percent of Hydrogen Remaining:
Displays fraction of desorbable hydrogen (vs. initial) remaining in the entire lattice.

Total Hydrogen Count:
Displays total of both attached and free hydrogens remaining in the system over time.

Patch Distribution:
Shows the distribution of patches based on how many desorbable hydrogen it are present

## THINGS TO NOTICE

One interesting thing to notice about the model is that the Total Hydrogen Count plot will have two distinct slopes. First, there will be a steep decrease near the beginning of the simulation, due to the fact that the desorbed hydrogen atoms near the surface will quickly pair up and leave the system. This will be followed by a linear region of diffusion as the particles regularly leave the system.  Given that the user has allowed for absorption and reabsorption at all stages, as the particles leave the system and desorption and reabsorption continues, the outer region of the lattice may decay to XH1(red) more quickly than the inner region. This is due to the fact that free desorbed hydrogen atoms exit through the surface of the material, while the hydrogen atoms in the central part of the lattice must diffuse more before being able to exit the system. Effectively, the inner lattice patches have greater opportunity to absorb free hydrogen. Changing the sliders can modify the degree to which this effect occurs.

## THINGS TO TRY

Setting all hydrogen control parameters to 0.10 will induce a "shell effect," where outer hydrogen atoms leave quickly, and free hydrogen atoms will become trapped in the central region of the lattice.  This is due to a re-absorption probability in combination with a slower relative diffusion rate through depleted cells.

When the RED-DIFFUSE is increased, the desorption rate decreases dramatically, with nearly linear dependence on this slider. With zero RED-DIFFUSE (0% chance to move to a red patch when there are other patches to move to), we observe many desorbed hydrogen atoms tightly grouped around a small area of non-depleted patches sustained by abnormally high re-absorption rates. Eventually these patches will become depleted, causing an 'explosion' of each of these clusters of free hydrogen atoms.  While this phenomenon is rather unrealistic, 0% RED-DIFFUSE is unrealistic as well.

Absorption also plays a huge role on the rate of hydrogen leaving the system.
With the absorption sliders set to 0, the simulation runs extremely quickly.
But with a slight increase of p3to4 and p2to3 to 0.02, the simulation time nearly doubles.

## EXTENDING THE MODEL

There are many interesting techniques that are used to accelerate kinetics of desorption that could eventually be modeled by this simulation.

The properties that are being investigated (bond breaking, diffusion speed, etc.) are calculable using first-principles Density Functional Theory methods. Having a built in converter that changed binding energy directly to a bond-breaking probability would allow the model to be greatly extended to model a great number of realistic systems.

Additionally, there are several catalytic means that could be implemented into this model. There is a 'magic dust' concept, where the inclusion of a very small amount of catalyst can dramatically reduce desorption time. There is alloy seeding, where the existence of depleted patches nearby promote the formation of similar patches nearby, depleting hydrogen. There is finally a size-effect - it is known that nanoparticles desorb hydrogen at much lower temperatures than bulk materials, but it is not known why - sophisticated size effect models could also be examined.

## CREDITS AND REFERENCES

This project was programmed by Daniel Kim, a graduating senior from the computer science department at Northwestern University as part of Professor Wilensky's Agent-Based Modeling class. It was advised by Wenhao Sun, a graduating senior in the Department of Materials Science and Engineering at Northwestern University.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Kim, D. and Wilensky, U. (2015).  NetLogo Hydrogen Diffusion 3D model.  http://ccl.northwestern.edu/netlogo/models/HydrogenDiffusion3D.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2015 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

Commercial licenses are also available. To inquire about commercial licenses, please contact Uri Wilensky at uri@northwestern.edu.

This is a 3D version of the 2D model Hydrogen Diffusion.

<!-- 2015 3D Cite: Kim, D. -->]]></info>
  <systemDynamics/>
  <modelInfo>
    <title/>
    <subject/>
  </modelInfo>
  <linkShapes>
    <linkShape curviness="0.0" name="default">
      <line stroke-dasharray="0.0,1.0" isVisible="false" offset="-0.2"/>
      <line stroke-dasharray="1.0,0.0" isVisible="true" offset="0.0"/>
      <line stroke-dasharray="0.0,1.0" isVisible="false" offset="0.2"/>
      <indicator editableColorIndex="0" rotatable="true" name="link direction">
        <elements>
          <line marked="true" filled="false" color="#8D8D8D" y2="180" x2="90" y1="150" x1="150"/>
          <line marked="true" filled="false" color="#8D8D8D" y2="180" x2="210" y1="150" x1="150"/>
        </elements>
      </indicator>
    </linkShape>
  </linkShapes>
  <widgets>
    <view bottom="252" right="245" top="0" left="0" frameRate="30.0" showTickCounter="true" fontSize="10">
      <dimensions3d maxPzcor="8" minPzcor="-8" maxPycor="8" minPycor="-8" maxPxcor="8" minPxcor="-8" wrapInZ="true" wrapInY="true" wrapInX="true" patchSize="13.0"/>
      <tickCounterLabel><![CDATA[ticks]]></tickCounterLabel>
    </view>
    <button bottom="48" right="210" top="15" left="125" ticksEnabled="true" forever="true">
      <source><![CDATA[go]]></source>
    </button>
    <button bottom="48" right="105" top="15" left="15" ticksEnabled="false" forever="false">
      <source><![CDATA[setup]]></source>
    </button>
    <slider bottom="58" right="430" top="25" left="235" direction="horizontal" default="0.05">
      <maximum><![CDATA[1]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[.01]]></step>
      <variable><![CDATA[p4to3]]></variable>
    </slider>
    <slider bottom="93" right="430" top="60" left="235" direction="horizontal" default="0.05">
      <maximum><![CDATA[1]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[.01]]></step>
      <variable><![CDATA[p3to2]]></variable>
    </slider>
    <slider bottom="128" right="430" top="95" left="235" direction="horizontal" default="0.05">
      <maximum><![CDATA[1]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[0.01]]></step>
      <variable><![CDATA[p2to1]]></variable>
    </slider>
    <plot bottom="285" right="655" top="140" left="450" ymax="10.0" ymin="0.0" xmax="10.0" xmin="0.0" legendOn="false" autoPlotOn="true">
      <display><![CDATA[Total  Hydrogen Count]]></display>
      <xAxis><![CDATA[time]]></xAxis>
      <yAxis><![CDATA[h]]></yAxis>
      <setup/>
      <update/>
      <pens>
        <pen inLegend="true" color="-13345367" mode="line" interval="1.0">
          <setup/>
          <update><![CDATA[plot h-remain]]></update>
          <display><![CDATA[hydrogens]]></display>
        </pen>
      </pens>
    </plot>
    <slider bottom="128" right="210" top="95" left="15" direction="horizontal" default="23.0">
      <maximum><![CDATA[100]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[1]]></step>
      <units><![CDATA[%]]></units>
      <variable><![CDATA[end-percent]]></variable>
    </slider>
    <slider bottom="193" right="430" top="160" left="235" direction="horizontal" default="0.05">
      <maximum><![CDATA[1]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[.01]]></step>
      <variable><![CDATA[p3to4]]></variable>
    </slider>
    <slider bottom="228" right="430" top="195" left="235" direction="horizontal" default="0.05">
      <maximum><![CDATA[1]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[0.01]]></step>
      <variable><![CDATA[p2to3]]></variable>
    </slider>
    <switch bottom="328" right="117" top="295" left="15" isOn="true">
      <variable><![CDATA[h3-on?]]></variable>
    </switch>
    <switch bottom="293" right="117" top="260" left="15" isOn="true">
      <variable><![CDATA[h4-on?]]></variable>
    </switch>
    <switch bottom="293" right="222" top="260" left="120" isOn="true">
      <variable><![CDATA[h2-on?]]></variable>
    </switch>
    <switch bottom="328" right="222" top="295" left="120" isOn="true">
      <variable><![CDATA[h1-on?]]></variable>
    </switch>
    <slider bottom="328" right="430" top="295" left="235" direction="horizontal" default="0.1">
      <maximum><![CDATA[2]]></maximum>
      <minimum><![CDATA[0]]></minimum>
      <step><![CDATA[0.01]]></step>
      <variable><![CDATA[red-diffuse]]></variable>
    </slider>
    <textbox fontSize="11" bottom="255" right="230" top="225" left="15" transparent="true" color="#000000">
      <display><![CDATA[Turns on/off the color visualizations
for the nth free hydrogen]]></display>
    </textbox>
    <switch bottom="208" right="137" top="175" left="15" isOn="true">
      <variable><![CDATA[grid-draw]]></variable>
    </switch>
    <monitor fontSize="11" bottom="125" right="655" top="80" left="450" precision="3">
      <source><![CDATA[(sum [h-count - 1] of patches with [patch-type = "surface"]) / (3 * count patches with [patch-type = "surface"])]]></source>
      <display><![CDATA[Fraction of Surface H Remaining]]></display>
    </monitor>
    <monitor fontSize="11" bottom="70" right="655" top="25" left="450" precision="3">
      <source><![CDATA[(h-remain / h-total) * 100]]></source>
      <display><![CDATA[Percent of Hydrogen Remaining]]></display>
    </monitor>
    <textbox fontSize="11" bottom="175" right="220" top="145" left="15" transparent="true" color="#000000">
      <display><![CDATA[Enables or disables
the grid markings]]></display>
    </textbox>
    <textbox fontSize="11" bottom="36" right="440" top="10" left="235" transparent="true" color="#000000">
      <display><![CDATA[Hydrogen Desorption Probabilities]]></display>
    </textbox>
    <textbox fontSize="11" bottom="171" right="440" top="145" left="235" transparent="true" color="#000000">
      <display><![CDATA[Hydrogen Absorption Probabilities]]></display>
    </textbox>
    <textbox fontSize="11" bottom="290" right="445" top="250" left="235" transparent="true" color="#000000">
      <display><![CDATA[Probability to move to depleted red
patch vs different colored patch]]></display>
    </textbox>
    <textbox fontSize="11" bottom="90" right="195" top="60" left="15" transparent="true" color="#000000">
      <display><![CDATA[Simulation termination %
(of initial hydrogen)]]></display>
    </textbox>
    <plot bottom="460" right="655" top="310" left="450" ymax="10.0" ymin="0.0" xmax="4.0" xmin="0.0" legendOn="false" autoPlotOn="true">
      <display><![CDATA[Patch Distribution]]></display>
      <setup/>
      <update><![CDATA[plot-pen-reset
set-plot-pen-color h1-color
plot ifelse-value (h1-on?) [count anchors with [color = lput anchor-transparency extract-rgb h1-color]][0]
set-plot-pen-color h2-color
plot ifelse-value (h2-on?) [count anchors with [color = lput anchor-transparency extract-rgb h2-color]][0]
set-plot-pen-color h3-color
plot ifelse-value (h3-on?) [count anchors with [color = lput anchor-transparency extract-rgb h3-color]][0]
set-plot-pen-color black
plot ifelse-value (h4-on?) [count anchors with [color = lput anchor-transparency extract-rgb h4-color]][0]]]></update>
      <pens>
        <pen inLegend="true" color="-7500403" mode="bar" interval="1.0">
          <setup/>
          <update/>
          <display><![CDATA[pen-0]]></display>
        </pen>
      </pens>
    </plot>
  </widgets>
  <experiments/>
  <shapes>
    <vectorShape editableColorIndex="0" rotatable="true" name="default">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,5 40,250 150,205 260,250"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="airplane">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,0 135,15 120,60 120,105 15,165 15,195 120,180 135,240 105,270 120,285 150,270 180,285 210,270 165,240 180,180 285,195 285,165 180,105 180,60 165,15"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="arrow">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,0 0,150 105,150 105,293 195,293 195,150 300,150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="box">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,285 285,225 285,75 150,135"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,135 15,75 150,15 285,75"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="15,75 15,225 150,285 150,135"/>
        <line marked="false" filled="false" color="#000000" y2="135" x2="150" y1="285" x1="150"/>
        <line marked="false" filled="false" color="#000000" y2="75" x2="15" y1="135" x1="150"/>
        <line marked="false" filled="false" color="#000000" y2="75" x2="285" y1="135" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="bug">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="182" cx="96"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="127" cx="110"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="75" cx="110"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="30" x2="80" y1="100" x1="150"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="30" x2="220" y1="100" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="butterfly">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,165 209,199 225,225 225,255 195,270 165,255 150,240"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,165 89,198 75,225 75,255 105,270 135,255 150,240"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="139,148 100,105 55,90 25,90 10,105 10,135 25,180 40,195 85,194 139,163"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="162,150 200,105 245,90 275,90 290,105 290,135 275,180 260,195 215,195 162,165"/>
        <polygon marked="false" filled="true" color="#000000" points="150,255 135,225 120,150 135,120 150,105 165,120 180,150 165,225"/>
        <circle marked="false" filled="true" color="#000000" diameter="30" cy="90" cx="135"/>
        <line marked="false" filled="false" color="#000000" y2="60" x2="195" y1="105" x1="150"/>
        <line marked="false" filled="false" color="#000000" y2="60" x2="105" y1="105" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="car">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="300,180 279,164 261,144 240,135 226,132 213,106 203,84 185,63 159,50 135,50 75,60 0,150 0,165 0,225 300,225 300,180"/>
        <circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="180"/>
        <circle marked="false" filled="true" color="#000000" diameter="90" cy="180" cx="30"/>
        <polygon marked="false" filled="true" color="#000000" points="162,80 132,78 134,135 209,135 194,105 189,96 180,89"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="47"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="58" cy="195" cx="195"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="circle">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="circle 2">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/>
        <circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="cow">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="200,193 197,249 179,249 177,196 166,187 140,189 93,191 78,179 72,211 49,209 48,181 37,149 25,120 25,89 45,72 103,84 179,75 198,76 252,64 272,81 293,103 285,121 255,121 242,118 224,167"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="73,210 86,251 62,249 48,208"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="25,114 16,195 9,204 23,213 25,200 39,123"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="cylinder">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="dot">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="90"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="face happy">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/>
        <polygon marked="false" filled="true" color="#000000" points="150,255 90,239 62,213 47,191 67,179 90,203 109,218 150,225 192,218 210,203 227,181 251,194 236,217 212,240"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="face neutral">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="7" cx="8"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/>
        <rect marked="false" filled="true" color="#000000" height="30" width="180" y="195" x="60"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="face sad">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="285" cy="8" cx="8"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="60"/>
        <circle marked="false" filled="true" color="#000000" diameter="60" cy="75" cx="180"/>
        <polygon marked="false" filled="true" color="#000000" points="150,168 90,184 62,210 47,232 67,244 90,220 109,205 150,198 192,205 210,220 227,242 251,229 236,206 212,183"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="fish">
      <elements>
        <polygon marked="false" filled="true" color="#FFFFFF" points="44,131 21,87 15,86 0,120 15,150 0,180 13,214 20,212 45,166"/>
        <polygon marked="false" filled="true" color="#FFFFFF" points="135,195 119,235 95,218 76,210 46,204 60,165"/>
        <polygon marked="false" filled="true" color="#FFFFFF" points="75,45 83,77 71,103 86,114 166,78 135,60"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="30,136 151,77 226,81 280,119 292,146 292,160 287,170 270,195 195,210 151,212 30,166"/>
        <circle marked="false" filled="true" color="#000000" diameter="30" cy="106" cx="215"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="flag">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="285" width="15" y="15" x="60"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="90,150 270,90 90,30"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="135" x2="90" y1="135" x1="75"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="45" x2="90" y1="45" x1="75"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="flower">
      <elements>
        <polygon marked="false" filled="true" color="#59B03C" points="135,120 165,165 180,210 180,240 150,300 165,300 195,240 195,195 165,135"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="85"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="147" cx="130"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="192"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="85"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="40" cx="177"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="132" cx="177"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="85" cx="70"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="38" cy="25" cx="130"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="51" cx="96"/>
        <circle marked="false" filled="true" color="#000000" diameter="74" cy="68" cx="113"/>
        <polygon marked="false" filled="true" color="#59B03C" points="189,233 219,188 249,173 279,188 234,218"/>
        <polygon marked="false" filled="true" color="#59B03C" points="180,255 150,210 105,210 75,240 135,240"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="house">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="165" width="210" y="120" x="45"/>
        <rect marked="false" filled="true" color="#000000" height="75" width="60" y="210" x="120"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="15,120 150,15 285,120"/>
        <line marked="false" filled="false" color="#000000" y2="120" x2="270" y1="120" x1="30"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="leaf">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,210 135,195 120,210 60,210 30,195 60,180 60,165 15,135 30,120 15,105 40,104 45,90 60,90 90,105 105,120 120,120 105,60 120,60 135,30 150,15 165,30 180,60 195,60 180,120 195,120 210,105 240,90 255,90 263,104 285,105 270,120 285,135 240,165 240,180 270,195 240,210 180,210 165,195"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,195 135,240 120,255 105,255 105,285 135,285 165,240 165,195"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="line">
      <elements>
        <line marked="true" filled="false" color="#8D8D8D" y2="300" x2="150" y1="0" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="line half">
      <elements>
        <line marked="true" filled="false" color="#8D8D8D" y2="150" x2="150" y1="0" x1="150"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="pentagon">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,15 15,120 60,285 240,285 285,120"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="person">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="80" cy="5" cx="110"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="105,90 120,195 90,285 105,300 135,300 150,225 165,300 195,300 210,285 180,195 195,90"/>
        <rect marked="true" filled="true" color="#8D8D8D" height="15" width="45" y="79" x="127"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="195,90 240,150 225,180 165,105"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="105,90 60,150 75,180 135,105"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="plant">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="210" width="30" y="90" x="135"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,255 90,210 45,195 75,255 135,285"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="165,255 210,210 255,195 225,255 165,285"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,180 90,135 45,120 75,180 135,210"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="165,180 165,210 225,180 255,120 210,135"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,105 90,60 45,45 75,105 135,135"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="165,105 165,135 225,105 255,45 210,60"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="135,90 120,45 150,15 180,45 165,90"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="sheep">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="60" width="29" y="225" x="151"/>
        <rect marked="true" filled="true" color="#8D8D8D" height="60" width="28" y="225" x="47"/>
        <rect marked="true" filled="true" color="#8D8D8D" height="150" width="195" y="75" x="15"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="150" cy="75" cx="135"/>
        <circle marked="false" filled="true" color="#000000" diameter="116" cy="76" cx="165"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="square">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="square 2">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="240" width="240" y="30" x="30"/>
        <rect marked="false" filled="true" color="#000000" height="180" width="180" y="60" x="60"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="star">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="151,1 185,108 298,108 207,175 242,282 151,216 59,282 94,175 3,108 116,108"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="target">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="300" cy="0" cx="0"/>
        <circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="180" cy="60" cx="60"/>
        <circle marked="false" filled="true" color="#000000" diameter="120" cy="90" cx="90"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="tree">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="94" cy="3" cx="118"/>
        <rect marked="false" filled="true" color="#9D6E48" height="105" width="60" y="195" x="120"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="108" cy="21" cx="65"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="127" cy="41" cx="116"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="120" cy="90" cx="45"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="152" cy="74" cx="104"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="triangle">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="triangle 2">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="150,30 15,255 285,255"/>
        <polygon marked="false" filled="true" color="#000000" points="151,99 225,223 75,224"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="truck">
      <elements>
        <rect marked="true" filled="true" color="#8D8D8D" height="142" width="191" y="45" x="4"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="296,193 296,150 259,134 244,104 208,104 207,194"/>
        <rect marked="false" filled="true" color="#FFFFFF" height="45" width="0" y="60" x="195"/>
        <polygon marked="false" filled="true" color="#000000" points="238,112 252,141 219,141 218,112"/>
        <circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="234"/>
        <rect marked="true" filled="true" color="#8D8D8D" height="9" width="33" y="185" x="181"/>
        <circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="144"/>
        <circle marked="false" filled="true" color="#000000" diameter="42" cy="174" cx="24"/>
        <circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="24"/>
        <circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="144"/>
        <circle marked="true" filled="false" color="#8D8D8D" diameter="42" cy="174" cx="234"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="true" name="turtle">
      <elements>
        <polygon marked="false" filled="true" color="#59B03C" points="215,204 240,233 246,254 228,266 215,252 193,210"/>
        <polygon marked="false" filled="true" color="#59B03C" points="195,90 225,75 245,75 260,89 269,108 261,124 240,105 225,105 210,105"/>
        <polygon marked="false" filled="true" color="#59B03C" points="105,90 75,75 55,75 40,89 31,108 39,124 60,105 75,105 90,105"/>
        <polygon marked="false" filled="true" color="#59B03C" points="132,85 134,64 107,51 108,17 150,2 192,18 192,52 169,65 172,87"/>
        <polygon marked="false" filled="true" color="#59B03C" points="85,204 60,233 54,254 72,266 85,252 107,210"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="119,75 179,75 209,101 224,135 220,225 175,261 128,261 81,224 74,135 88,99"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="wheel">
      <elements>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="294" cy="3" cx="3"/>
        <circle marked="false" filled="true" color="#000000" diameter="240" cy="30" cx="30"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="15" x2="150" y1="285" x1="150"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="150" x2="285" y1="150" x1="15"/>
        <circle marked="true" filled="true" color="#8D8D8D" diameter="60" cy="120" cx="120"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="269" x2="79" y1="40" x1="216"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="221" x2="269" y1="84" x1="40"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="79" x2="269" y1="216" x1="40"/>
        <line marked="true" filled="false" color="#8D8D8D" y2="269" x2="221" y1="40" x1="84"/>
      </elements>
    </vectorShape>
    <vectorShape editableColorIndex="0" rotatable="false" name="x">
      <elements>
        <polygon marked="true" filled="true" color="#8D8D8D" points="270,75 225,30 30,225 75,270"/>
        <polygon marked="true" filled="true" color="#8D8D8D" points="30,75 75,30 270,225 225,270"/>
      </elements>
    </vectorShape>
  </shapes>
  <code><![CDATA[patches-own [
  patch-type ;; inner, surface, or air
  h-count
]

globals[
  ;;visualization constants
  h4-color h3-color h2-color h1-color
  anchor-transparency ;;color transparency for anchors
  hydrogen-transparency ;;color transparency for hydrogen
  box-size
  h-size
  h-total ;; total hydrogen available in patches and free-roaming
  h-remain ;; remaining hydrogen
]

breed [hydrogens hydrogen]  ;;hydrogen
breed [anchors anchor] ;;patch visualization

to setup
  clear-all
  set anchor-transparency 161

  ;;Colors for Hydrogen Counts
  ifelse h4-on?
    [ set h4-color white ]
    [ set h4-color 0 ]

  ifelse h3-on?
    [ set h3-color green ]
    [ set h3-color 0 ]

  ifelse h2-on?
    [ set h2-color blue ]
    [ set h2-color 0 ]

  ifelse h1-on?
    [ set h1-color red ]
    [ set h1-color 0 ]

  set hydrogen-transparency 200
  set box-size 0.30
  set h-size 0.35

  ;;SETUP PATCHES

  ;; all patches start as air
  ask patches [ set patch-type "air" ]

  ;;Quick diffuse surface patches
  ask patches with [
    (pxcor > min-pxcor and pxcor < max-pxcor) and
    (pycor > min-pycor and pycor < max-pycor) and
    (pzcor > min-pzcor and pzcor < max-pzcor)
  ] [
    set patch-type "surface"
  ]

  ;;Inner lattice patches
  ask patches with [
    (pxcor > min-pxcor + 1 and pxcor < max-pxcor - 1) and
    (pycor > min-pycor + 1 and pycor < max-pycor - 1) and
    (pzcor > min-pzcor + 1 and pzcor < max-pzcor - 1)
  ] [
    set patch-type "inner"
  ]

  ;;Populate anchors
  ask patches with [ patch-type != "air" ] [
    sprout-anchors 1 [
      set shape "square"
      set color lput anchor-transparency extract-rgb h4-color
      set size box-size
      set heading 0
      set pitch 0
    ]
    set h-count 4
  ]

  ;;Total Hydrogens
  set h-total ((count patches with [ patch-type != "air" ]) * 3)
  set h-remain h-total

  ;;Grid Draw
  if grid-draw [
    ask patch min-pxcor min-pycor min-pzcor [
      sprout 1 [
        set color gray - 2

        ;;Y
        set heading 0
        ;;loop setup
        set xcor xcor - 1.5 set ycor ycor - 0.5 set zcor zcor - 1.5
        repeat (max-pxcor * 2 + 1) [
          set zcor zcor + 1
          repeat (max-pxcor * 2 + 1) [
            set ycor min-pxcor - 0.5
            set xcor xcor + 1
            pen-down fd .25 repeat (max-pxcor * 2) [ pen-up fd .5 pen-down fd .5 ] pen-up fd .5 pen-down fd .25 pen-up ]
          set xcor xcor + 1
        ]
        set xcor xcor + 1

        ;;X
        set heading 90
        ;;loop setup
        set ycor ycor - 1 set zcor min-pzcor - 0.5 - 1
        repeat (max-pxcor * 2 + 1) [
          set zcor zcor + 1
          repeat (max-pxcor * 2 + 1) [
            set ycor ycor + 1
            pen-down fd .25 repeat (max-pxcor * 2) [ pen-up fd .5 pen-down fd .5 ] pen-up fd .5 pen-down fd .25 pen-up ]
          set ycor ycor + 1
        ]

        ;;Z
        set pitch 90
        ;;loop setup
        set zcor zcor + 1 set xcor xcor - 1
        repeat (max-pxcor * 2 + 1) [
          set ycor ycor + 1
          repeat (max-pxcor * 2 + 1) [
            set xcor xcor + 1
            pen-down fd .25 repeat (max-pxcor * 2) [ pen-up fd .5 pen-down fd .5 ] pen-up fd .5 pen-down fd .25 pen-up ]
          set xcor xcor + 1
        ]

        ;;kill pen turtle
        die
      ]
    ]
  ]
  reset-ticks
end

to go

  ;;Termination %
  if h-remain < (h-total * end-percent / 100) [
    ask patch 0 0 0 [ set pcolor red ]
    stop
  ]

  ;; removing H2 from model
  ask hydrogens with [ color = yellow ] [ die ]

  ;;Freedom! - Hydrogen desorbs
  ask patches with [ h-count = 2 ] [
    if random-float 1.0 < p2to1 [
      set h-count h-count - 1
      sprout-hydrogens 1 [
        set shape "circle"
        set color lput hydrogen-transparency extract-rgb h1-color
        set size h-size
        fd random-float .4 - .8
      ]
      ask anchors-here [
        set color lput anchor-transparency extract-rgb h1-color
      ]
    ]
  ]

  ask patches with [ h-count = 3 ] [
    if random-float 1.0 < p3to2 [
      set h-count h-count - 1
      sprout-hydrogens 1 [
        set shape "circle"
        set color lput hydrogen-transparency extract-rgb h2-color
        set size h-size
        fd random-float .4 - .8
      ]
      ask anchors-here [
        set color lput anchor-transparency extract-rgb h2-color
      ]
    ]
  ]

  ask patches with [ h-count = 4 ] [
    if random-float 1.0 < p4to3 [
      set h-count h-count - 1
      sprout-hydrogens 1 [
        set shape "circle"
        set color lput hydrogen-transparency extract-rgb h3-color
        set size h-size
        fd random-float .4 - .8
      ]
      ask anchors-here [
        set color lput anchor-transparency extract-rgb h3-color
      ]
    ]
  ]

  ;;Absorption
  ask hydrogens [
    ;;2 to 3 absorption
    ifelse (h-count = 2) and (random-float 1.0 < p2to3) [
      set h-count h-count + 1 ;; patch variable
      ask anchors-here [
        set color lput anchor-transparency extract-rgb h3-color
      ]
      die
    ] [
      ;;3 to 4 absorption
      if ((h-count = 3) and (random-float 1.0 < p3to4)) [
        set h-count h-count + 1 ;; patch variable
        ask anchors-here [
          set color lput anchor-transparency extract-rgb h4-color
        ]
        die
      ]
    ]
  ]

  ;; HYDROGEN MOVEMENT
  ask hydrogens-on patches with [ patch-type = "inner" ] [
    let norm (count neighbors6 with [ h-count = 1 ]) * red-diffuse + (count neighbors6 with [h-count > 1]) + 0.00000000001
    let p-red (count neighbors6 with [ h-count = 1 ]) * red-diffuse / norm ;;percent chance to move to red(depleted regions)

    ifelse (random-float 1.0 < p-red) [
      face one-of neighbors6 with [ h-count = 1 ]
    ] [
      ifelse count (neighbors6 with [ h-count > 1 ]) > 0 [
        face one-of neighbors6 with [ h-count > 1 ]
      ] [
        face one-of neighbors6
      ]
    ]

    ;; move to neighboring patch, then slightly off-center
    fd random-float 1.4 - .8
  ]

  ;; quick-diffuse surface hydrogens
  ask hydrogens-on patches with [ patch-type != "inner" ] [
    face one-of neighbors with [ patch-type = "surface" ]
    fd 1
  ]

  ;; PAIRING-UP AND LEAVING
  ;;==============================================================================
  ask patches with [ patch-type = "surface" ] [

    ;; When there are two hydrogens on one surface lattice patch, combine and leave system
    if count hydrogens-here > 1 [
      ask n-of 2 hydrogens-here [
        set color yellow
        set size .5
      ]
      set h-remain h-remain - 2
    ]
  ]

  tick
end


; Copyright 2015 Uri Wilensky.
; See Info tab for full copyright and license.]]></code>
  <modelSettings snapToGrid="true"/>
  <hubnet/>
</model>
